# DO NOT EDIT: THIS FILE WILL BE RESET DURING UPDATES
#
# This file contains configuration for the shared Brewblox services
#
# If you need to make change to any of the shared services,
# you can do so in docker-compose.yml.
#
# For more information, see https://docs.docker.com/compose/extends/
services:
  eventbus:
    image: ghcr.io/brewblox/mosquitto:externals
    restart: unless-stopped
    labels:
      - traefik.http.services.eventbus.loadbalancer.server.port=15675
      - traefik.tcp.routers.mqtts.entrypoints=mqtts
      - traefik.tcp.routers.mqtts.tls=true
      - traefik.tcp.routers.mqtts.rule=HostSNI(`*`)
      - traefik.tcp.routers.mqtts.service=eventbus
      - traefik.tcp.services.eventbus.loadBalancer.server.port=1884
    volumes:
      - type: bind
        source: ./mosquitto
        target: /mosquitto/include
        read_only: true
    ports:
      - "${BREWBLOX_PORT_MQTT:-1883}:1883"
  victoria:
    image: victoriametrics/victoria-metrics:v1.88.0
    restart: unless-stopped
    labels:
      - traefik.http.services.victoria.loadbalancer.server.port=8428
    volumes:
      - type: bind
        source: ./victoria
        target: /victoria-metrics-data
    command: >-
      --retentionPeriod=100y
      --influxMeasurementFieldSeparator=/
      --http.pathPrefix=/victoria
      --search.latencyOffset=10s
  redis:
    image: redis:6.0
    restart: unless-stopped
    labels:
      - traefik.enable=false
    volumes:
      - type: bind
        source: ./redis
        target: /data
    command: --appendonly yes
  history:
    image: ghcr.io/brewblox/brewblox-history:${BREWBLOX_RELEASE}
    restart: unless-stopped
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
    # Privileged to avoid a bug in libseccomp for Debian Buster hosts
    # This flag should be removed when Debian Buster is no longer supported
    # For an explanation: https://github.com/sdr-enthusiasts/Buster-Docker-Fixes
    privileged: true
  traefik:
    image: traefik:2.9
    restart: unless-stopped
    labels:
      - traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)
      - traefik.http.routers.api.service=api@internal
      - traefik.http.middlewares.prefix-strip.stripprefixregex.regex=/[^/]+
    volumes:
      - type: bind
        source: ./traefik
        target: /config
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
    ports:
      - "${BREWBLOX_PORT_HTTP:-80}:${BREWBLOX_PORT_HTTP:-80}"
      - "${BREWBLOX_PORT_HTTPS:-443}:${BREWBLOX_PORT_HTTPS:-443}"
      - "8883:8883"
    command: >-
      --api.dashboard=true
      --providers.docker=true
      --providers.docker.constraints="LabelRegex(`com.docker.compose.project`, `${COMPOSE_PROJECT_NAME}`)"
      --providers.docker.defaultrule="PathPrefix(`/{{ index .Labels \"com.docker.compose.service\" }}`)"
      --providers.file.directory=/config
      --entrypoints.web.address=:${BREWBLOX_PORT_HTTP}
      --entrypoints.websecure.address=:${BREWBLOX_PORT_HTTPS}
      --entrypoints.websecure.http.tls=true
      --entrypoints.mqtts.address=:8883/tcp
  ui:
    image: ghcr.io/brewblox/brewblox-ui:${BREWBLOX_RELEASE}
    restart: unless-stopped
    labels:
      - traefik.http.routers.ui.rule=PathPrefix(`/ui`) || Path(`/`)
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
